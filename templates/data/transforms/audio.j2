{% macro speed(orig_freq, factor) %}
Speed(
    orig_freq={{ orig_freq }},
    factor={{ factor }}
)
{% endmacro %}

{% macro amplitude_to_db(stype='"power"', top_db=None) %}
AmplitudeToDB(
    stype={{ stype }},
    top_db={{ top_db }}
)
{% endmacro %}

{% macro resample(orig_freq=16000, new_freq=16000, resampling_method='"sinc_interp_hann"', lowpass_filter_width=6, rolloff=0.99, beta=None, dtype=None) %}
Resample(
    orig_freq={{ orig_freq }},
    new_freq={{ new_freq }},
    resampling_method={{ resampling_method }},
    lowpass_filter_width={{ lowpass_filter_width }},
    rolloff={{ rolloff }},
    beta={{ beta }},
    dtype={{ dtype }}
)
{% endmacro %}

{% macro fade(fade_in_len=0, fade_out_len=0, fade_shape='"linear"') %}
Fade(
    fade_in_len={{ fade_in_len }},
    fade_out_len={{ fade_out_len }},
    fade_shape={{ fade_shape }}
)
{% endmacro %}

{% macro vol(gain, gain_type='"amplitude"') %}
Vol(
    gain={{ gain }},
    gain_type={{ gain_type }}
)
{% endmacro %}

{% macro loudness(sample_rate) %}
Loudness(
    sample_rate={{ sample_rate }}
)
{% endmacro %}

{% macro add_noise(waveform, noise, snr, lengths=None) %}
AddNoise(
    waveform={{ waveform }},
    noise={{ noise }},
    snr={{ snr }},
    lengths={{ lengths }}
)
{% endmacro %}

{% macro spectrogram(n_fft=400, win_length=None, hop_length=None, pad=0, window_fn='torch.hann_window', power=2, normalized=False, wkwargs=None, center=True, pad_mode='"reflect"', onesided=True, return_complex=None) %}
Spectrogram(
    n_fft={{ n_fft }},
    win_length={{ win_length }},
    hop_length={{ hop_length }},
    pad={{ pad }},
    window_fn={{ window_fn }},
    power={{ power }},
    normalized={{ normalized }},
    wkwargs={{ wkwargs }},
    center={{ center }},
    pad_mode={{ pad_mode }},
    onesided={{ onesided }},
    return_complex={{ return_complex }}
)
{% endmacro %}

{% macro inverse_spectrogram(n_fft=400, win_length=None, hop_length=None, pad=0, window_fn='torch.hann_window', normalized=False, wkwargs=None, center=True, pad_mode='"reflect"', onesided=True) %}
InverseSpectrogram(
    n_fft={{ n_fft }},
    win_length={{ win_length }},
    hop_length={{ hop_length }},
    pad={{ pad }},
    window_fn={{ window_fn }},
    normalized={{ normalized }},
    wkwargs={{ wkwargs }},
    center={{ center }},
    pad_mode={{ pad_mode }},
    onesided={{ onesided }}
)
{% endmacro %}

{% macro mel_scale(n_mels=128, sample_rate=16000, f_min=0.0, f_max=None, n_stft=201, norm=None, mel_scale='"htk"') %}
MelScale(
    n_mels={{ n_mels }},
    sample_rate={{ sample_rate }},
    f_min={{ f_min }},
    f_max={{ f_max }},
    n_stft={{ n_stft }},
    norm={{ norm }},
    mel_scale={{ mel_scale }}
)
{% endmacro %}

{% macro inverse_mel_scale(n_stft, n_mels=128, sample_rate=16000, f_min=0.0, f_max=None, norm=None, mel_scale='"htk"', driver='"gels"') %}
InverseMelScale(
    n_stft={{ n_stft }},
    n_mels={{ n_mels }},
    sample_rate={{ sample_rate }},
    f_min={{ f_min }},
    f_max={{ f_max }},
    norm={{ norm }},
    mel_scale={{ mel_scale }},
    driver={{ driver }}
)
{% endmacro %}

{% macro mel_spectrogram(sample_rate=16000, n_fft=400, win_length=None, hop_length=None, f_min=0.0, f_max=None, pad=0, n_mels=128, window_fn='torch.hann_window', power=2, normalized=False, wkwargs=None, center=True) %}
MelSpectrogram(
    sample_rate={{ sample_rate }},
    n_fft={{ n_fft }},
    win_length={{ win_length }},
    hop_length={{ hop_length }},
    f_min={{ f_min }},
    f_max={{ f_max }},
    pad={{ pad }},
    n_mels={{ n_mels }},
    window_fn={{ window_fn }},
    power={{ power }},
    normalized={{ normalized }},
    wkwargs={{ wkwargs }},
    center={{ center }}
)
{% endmacro %}